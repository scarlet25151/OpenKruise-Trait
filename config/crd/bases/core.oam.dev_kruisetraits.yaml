
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: kruisetraits.core.oam.dev
spec:
  group: core.oam.dev
  names:
    categories:
      - crossplane
      - oam
    kind: KruiseTrait
    listKind: KruiseTrait
    plural: kruisetraits
    singular: kruisetrait
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KruiseTrait is the Schema for the kruisetraits API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TraitSpec defines the desired state of KruiseTrait
          properties:
            replicasCount:
              description: ReplicasCount is the total desired replicas of all the subsets.
                If unspecified, defaults to 1.
              format: int32
              type: integer
            cloneSetScaleStrategy:
              description: ScaleStrategy indicates the ScaleStrategy that will be
                employed to create and delete Pods in the CloneSet.
                properties:
                  podsToDelete:
                    description: PodsToDelete is the names of Pod should be deleted.
                      Note that this list will be truncated for non-existing pod names.
                    items:
                      type: string
                    type: array
                type: object
            cloneSetUpdateStrategy:
              description: UpdateStrategy indicates the UpdateStrategy that will be
                employed to update Pods in the CloneSet when a revision is made to
                Template.
              properties:
                type:
                  description: Type indicates the type of the CloneSetUpdateStrategy.
                    Default is ReCreate.
                  type: string
                partition:
                  description: Partition is the desired number of pods in old revisions.
                    It means when partition is set during pods updating, (replicas
                    - partition) number of pods will be updated. Default value is
                    0.
                  format: int32
                  type: integer
                maxUnavailable:
                  anyOf:
                    - type: integer
                    - type: string
                  description: 'The maximum number of pods that can be unavailable
                                              during the update. Value can be an absolute number (ex: 5) or
                                              a percentage of desired pods (ex: 10%). Absolute number is calculated
                                              from percentage by rounding up by default. When maxSurge > 0,
                                              absolute number is calculated from percentage by rounding down.
                                              Defaults to 20%.'
                  x-kubernetes-int-or-string: true
                maxSurge:
                  anyOf:
                    - type: integer
                    - type: string
                  description: 'The maximum number of pods that can be scheduled above
                                the desired replicas during the update. Value can be an absolute
                                number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute
                                number is calculated from percentage by rounding up. Defaults
                                to 0.'
                  x-kubernetes-int-or-string: true
                paused:
                  description: Paused indicates that the CloneSet is paused. Default
                    value is false
                  type: boolean
                priorityStrategy:
                  description: Priorities are the rules for calculating the priority
                    of updating pods. Each pod to be updated, will pass through these
                    terms and get a sum of weights.
                  properties:
                    orderPriority:
                      description: 'Order priority terms, pods will be sorted by the
                                    value of orderedKey. For example: ``` orderPriority: - orderedKey:
                                    key1 - orderedKey: key2 ``` First, all pods which have key1
                                    in labels will be sorted by the value of key1. Then, the left
                                    pods which have no key1 but have key2 in labels will be sorted
                                    by the value of key2 and put behind those pods have key1.'
                      items:
                        description: UpdatePriorityOrder defines order priority.
                        properties:
                          orderedKey:
                            description: Calculate priority by value of this key.
                              Values of this key, will be sorted by GetInt(val). GetInt
                              method will find the last int in value, such as getting
                              5 in value '5', getting 10 in value 'sts-10'.
                            type: string
                        required:
                          - orderedKey
                        type: object
                      type: array
                    weightPriority:
                      description: Weight priority terms, pods will be sorted by the
                        sum of all terms weight.
                      items:
                        description: UpdatePriorityWeightTerm defines weight priority.
                        properties:
                          matchSelector:
                            description: MatchSelector is used to select by pod's
                              labels.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          weight:
                            description: Weight associated with matching the corresponding
                              matchExpressions, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                          - matchSelector
                          - weight
                        type: object
                      type: array
                  type: object
                scatterStrategy:
                  description: ScatterStrategy defines the scatter rules to make pods
                    been scattered when update. This will avoid pods with the same
                    key-value to be updated in one batch. - Note that pods will be
                    scattered after priority sort. So, although priority strategy
                    and scatter strategy can be applied together, we suggest to use
                    either one of them. - If scatterStrategy is used, we suggest to
                    just use one term. Otherwise, the update order can be hard to
                    understand.
                  items:
                    properties:
                      key:
                        type: string
                      value:
                        type: string
                    required:
                      - key
                      - value
                    type: object
                  type: array
                inPlaceUpdateStrategy:
                  description: InPlaceUpdateStrategy contains strategies for in-place
                    update.
                  properties:
                    gracePeriodSeconds:
                      description: GracePeriodSeconds is the timespan between set
                        Pod status to not-ready and update images in Pod spec when
                        in-place update a Pod.
                      format: int32
                      type: integer
                  type: object
              type: object
            statefulSetUpdateStrategy:
              description: updateStrategy indicates the StatefulSetUpdateStrategy
                that will be employed to update Pods in the StatefulSet when a revision
                is made to Template.
              properties:
                rollingUpdate:
                  description: RollingUpdate is used to communicate parameters when
                    Type is RollingUpdateStatefulSetStrategyType.
                  properties:
                    inPlaceUpdateStrategy:
                      description: InPlaceUpdateStrategy contains strategies for in-place
                        update.
                      properties:
                        gracePeriodSeconds:
                          description: GracePeriodSeconds is the timespan between
                            set Pod status to not-ready and update images in Pod spec
                            when in-place update a Pod.
                          format: int32
                          type: integer
                      type: object
                    maxUnavailable:
                      anyOf:
                        - type: integer
                        - type: string
                      description: 'The maximum number of pods that can be unavailable
                                    during the update. Value can be an absolute number (ex: 5)
                                    or a percentage of desired pods (ex: 10%). Absolute number
                                    is calculated from percentage by rounding down. Also, maxUnavailable
                                    can just be allowed to work with Parallel podManagementPolicy.
                                    Defaults to 1.'
                      x-kubernetes-int-or-string: true
                    minReadySeconds:
                      description: MinReadySeconds indicates how long will the pod
                        be considered ready after it's updated. MinReadySeconds works
                        with both OrderedReady and Parallel podManagementPolicy. It
                        affects the pod scale up speed when the podManagementPolicy
                        is set to be OrderedReady. Combined with MaxUnavailable, it
                        affects the pod update speed regardless of podManagementPolicy.
                        Default value is 0, max is 300.
                      format: int32
                      type: integer
                    partition:
                      description: 'Partition indicates the ordinal at which the StatefulSet
                                    should be partitioned by default. But if unorderedUpdate has
                                    been set:   - Partition indicates the number of pods with
                                    non-updated revisions when rolling update.   - It means controller
                                    will update $(replicas - partition) number of pod. Default
                                    value is 0.'
                      format: int32
                      type: integer
                    paused:
                      description: Paused indicates that the StatefulSet is paused.
                        Default value is false
                      type: boolean
                    podUpdatePolicy:
                      description: PodUpdatePolicy indicates how pods should be updated
                        Default value is "ReCreate"
                      type: string
                    unorderedUpdate:
                      description: UnorderedUpdate contains strategies for non-ordered
                        update. If it is not nil, pods will be updated with non-ordered
                        sequence. Noted that UnorderedUpdate can only be allowed to
                        work with Parallel podManagementPolicy
                      properties:
                        priorityStrategy:
                          description: Priorities are the rules for calculating the
                            priority of updating pods. Each pod to be updated, will
                            pass through these terms and get a sum of weights.
                          properties:
                            orderPriority:
                              description: 'Order priority terms, pods will be sorted
                                            by the value of orderedKey. For example: ``` orderPriority:
                                            - orderedKey: key1 - orderedKey: key2 ``` First, all
                                            pods which have key1 in labels will be sorted by the
                                            value of key1. Then, the left pods which have no key1
                                            but have key2 in labels will be sorted by the value
                                            of key2 and put behind those pods have key1.'
                              items:
                                description: UpdatePriorityOrder defines order priority.
                                properties:
                                  orderedKey:
                                    description: Calculate priority by value of this
                                      key. Values of this key, will be sorted by GetInt(val).
                                      GetInt method will find the last int in value,
                                      such as getting 5 in value '5', getting 10 in
                                      value 'sts-10'.
                                    type: string
                                required:
                                  - orderedKey
                                type: object
                              type: array
                            weightPriority:
                              description: Weight priority terms, pods will be sorted
                                by the sum of all terms weight.
                              items:
                                description: UpdatePriorityWeightTerm defines weight
                                  priority.
                                properties:
                                  matchSelector:
                                    description: MatchSelector is used to select by
                                      pod's labels.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding matchExpressions, in the range
                                      1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - matchSelector
                                  - weight
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                type:
                  description: Type indicates the type of the StatefulSetUpdateStrategy.
                    Default is RollingUpdate.
                  type: string
              type: object
            unitedDeploymentUpdateStrategy:
              description: updateStrategy indicates the StatefulSetUpdateStrategy
                that will be employed to update Pods in the StatefulSet
                when a revision is made to Template.
              properties:
                rollingUpdate:
                  description: RollingUpdate is used to communicate parameters
                    when Type is RollingUpdateStatefulSetStrategyType.
                  properties:
                    inPlaceUpdateStrategy:
                      description: InPlaceUpdateStrategy contains strategies
                        for in-place update.
                      properties:
                        gracePeriodSeconds:
                          description: GracePeriodSeconds is the timespan
                            between set Pod status to not-ready and update
                            images in Pod spec when in-place update a
                            Pod.
                          format: int32
                          type: integer
                      type: object
                    maxUnavailable:
                      anyOf:
                        - type: integer
                        - type: string
                      description: 'The maximum number of pods that can
                                                be unavailable during the update. Value can be
                                                an absolute number (ex: 5) or a percentage of
                                                desired pods (ex: 10%). Absolute number is calculated
                                                from percentage by rounding down. Also, maxUnavailable
                                                can just be allowed to work with Parallel podManagementPolicy.
                                                Defaults to 1.'
                      x-kubernetes-int-or-string: true
                    minReadySeconds:
                      description: MinReadySeconds indicates how long
                        will the pod be considered ready after it's updated.
                        MinReadySeconds works with both OrderedReady and
                        Parallel podManagementPolicy. It affects the pod
                        scale up speed when the podManagementPolicy is
                        set to be OrderedReady. Combined with MaxUnavailable,
                        it affects the pod update speed regardless of
                        podManagementPolicy. Default value is 0, max is
                        300.
                      format: int32
                      type: integer
                    partition:
                      description: 'Partition indicates the ordinal at
                                                which the StatefulSet should be partitioned by
                                                default. But if unorderedUpdate has been set:   -
                                                Partition indicates the number of pods with non-updated
                                                revisions when rolling update.   - It means controller
                                                will update $(replicas - partition) number of
                                                pod. Default value is 0.'
                      format: int32
                      type: integer
                    paused:
                      description: Paused indicates that the StatefulSet
                        is paused. Default value is false
                      type: boolean
                    podUpdatePolicy:
                      description: PodUpdatePolicy indicates how pods
                        should be updated Default value is "ReCreate"
                      type: string
                    unorderedUpdate:
                      description: UnorderedUpdate contains strategies
                        for non-ordered update. If it is not nil, pods
                        will be updated with non-ordered sequence. Noted
                        that UnorderedUpdate can only be allowed to work
                        with Parallel podManagementPolicy
                      properties:
                        priorityStrategy:
                          description: Priorities are the rules for calculating
                            the priority of updating pods. Each pod to
                            be updated, will pass through these terms
                            and get a sum of weights.
                          properties:
                            orderPriority:
                              description: 'Order priority terms, pods
                                                        will be sorted by the value of orderedKey.
                                                        For example: ``` orderPriority: - orderedKey:
                                                        key1 - orderedKey: key2 ``` First, all
                                                        pods which have key1 in labels will be
                                                        sorted by the value of key1. Then, the
                                                        left pods which have no key1 but have
                                                        key2 in labels will be sorted by the value
                                                        of key2 and put behind those pods have
                                                        key1.'
                              items:
                                description: UpdatePriorityOrder defines
                                  order priority.
                                properties:
                                  orderedKey:
                                    description: Calculate priority by
                                      value of this key. Values of this
                                      key, will be sorted by GetInt(val).
                                      GetInt method will find the last
                                      int in value, such as getting 5
                                      in value '5', getting 10 in value
                                      'sts-10'.
                                    type: string
                                required:
                                  - orderedKey
                                type: object
                              type: array
                            weightPriority:
                              description: Weight priority terms, pods
                                will be sorted by the sum of all terms
                                weight.
                              items:
                                description: UpdatePriorityWeightTerm
                                  defines weight priority.
                                properties:
                                  matchSelector:
                                    description: MatchSelector is used
                                      to select by pod's labels.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions
                                          is a list of label selector
                                          requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector
                                            requirement is a selector
                                            that contains values, a key,
                                            and an operator that relates
                                            the key and values.
                                          properties:
                                            key:
                                              description: key is the
                                                label key that the selector
                                                applies to.
                                              type: string
                                            operator:
                                              description: operator represents
                                                a key's relationship to
                                                a set of values. Valid
                                                operators are In, NotIn,
                                                Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an
                                                array of string values.
                                                If the operator is In
                                                or NotIn, the values array
                                                must be non-empty. If
                                                the operator is Exists
                                                or DoesNotExist, the values
                                                array must be empty. This
                                                array is replaced during
                                                a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a
                                          map of {key,value} pairs. A
                                          single {key,value} in the matchLabels
                                          map is equivalent to an element
                                          of matchExpressions, whose key
                                          field is "key", the operator
                                          is "In", and the values array
                                          contains only "value". The requirements
                                          are ANDed.
                                        type: object
                                    type: object
                                  weight:
                                    description: Weight associated with
                                      matching the corresponding matchExpressions,
                                      in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                  - matchSelector
                                  - weight
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                type:
                  description: Type indicates the type of the StatefulSetUpdateStrategy.
                    Default is RollingUpdate.
                  type: string
              type: object